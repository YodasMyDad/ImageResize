@page
@model IndexModel
@{
    ViewData["Title"] = "Image Resize Demo";
}

<h1 class="mb-4">@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-12">
        <div class="alert alert-info mb-4">
            <strong>Image Resize Demo:</strong> This page demonstrates the ImageResize middleware by showing how to serve dynamically resized images using URL query parameters. Each image is resized on-demand by the middleware and cached for optimal performance.
        </div>

        @if (!string.IsNullOrEmpty(Model.UploadError))
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Error:</strong> @Model.UploadError
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="card mb-4">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">
                    <i class="bi bi-upload"></i> Try Your Own Image
                </h5>
            </div>
            <div class="card-body">
                <p class="text-muted">
                    Upload your own image to see how it looks at different sizes and quality settings. The image will be processed through the same ImageResize middleware.
                </p>

                <form method="post" enctype="multipart/form-data" class="mb-3">
                    <div class="row align-items-end">
                        <div class="col-md-8">
                            <label for="uploadedImage" class="form-label">Select an image file</label>
                            <input type="file" 
                                   class="form-control" 
                                   id="uploadedImage" 
                                   name="UploadedImage" 
                                   accept="image/*" 
                                   required />
                            <small class="text-muted">Supported formats: JPG, PNG, GIF, WebP, BMP, TIFF (Max 10MB)</small>
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-upload"></i> Upload & Resize
                            </button>
                        </div>
                    </div>
                </form>

                @if (Model.IsCustomImage)
                {
                    <div class="alert alert-success mb-0">
                        <strong>Custom Image Active!</strong> You're now viewing your uploaded image.
                        <form method="post" asp-page-handler="Reset" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-outline-success ms-2">
                                <i class="bi bi-arrow-clockwise"></i> Reset to Default
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>

        @if (Model.ResizedImages != null && Model.ResizedImages.Any())
        {
            <div class="row">
                @foreach (var resizedImage in Model.ResizedImages)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 shadow-sm">
                            <div class="card-header bg-primary text-white">
                                <h5 class="card-title mb-0">@resizedImage.Title</h5>
                            </div>
                            <div class="card-body text-center">
                                <img src="@resizedImage.Url"
                                     alt="@resizedImage.Title image"
                                     class="img-fluid rounded mb-3"
                                     style="max-height: 250px; object-fit: contain;" />

                                <p class="text-muted small mb-3">@resizedImage.Description</p>

                                <div class="row text-start">
                                    <div class="col-6">
                                        <strong>Size:</strong><br />
                                        <small class="text-muted">@resizedImage.SizeLabel</small>
                                    </div>
                                    <div class="col-6">
                                        <strong>Quality:</strong><br />
                                        <small class="text-muted">@resizedImage.Quality%</small>
                                    </div>
                                    <div class="col-6">
                                        <strong>URL:</strong><br />
                                        <small class="text-muted font-monospace">@resizedImage.Url</small>
                                    </div>
                                    <div class="col-6">
                                        <strong>Format:</strong><br />
                                        <small class="text-muted">JPEG (on-demand)</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="card mt-4">
                <div class="card-header">
                    <h5>Image Resize URLs</h5>
                </div>
                <div class="card-body">
                    <p class="text-muted mb-3">
                        Each image is served on-demand by the ImageResize middleware using the URLs shown below.
                        The middleware automatically resizes and caches images based on the query parameters.
                    </p>

                    <div class="row">
                        <div class="col-md-12">
                            <h6>Resize Options:</h6>
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Size</th>
                                        <th>Dimensions</th>
                                        <th>Quality</th>
                                        <th>URL</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var img in Model.ResizedImages)
                                    {
                                        <tr>
                                            <td><strong>@img.Title</strong></td>
                                            <td>@img.SizeLabel</td>
                                            <td>@img.Quality%</td>
                                            <td><code>@img.Url</code></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="alert alert-info mt-3">
                        <strong>How it works:</strong> When you visit any of these URLs, the middleware intercepts the request,
                        resizes the original image (<code>wwwroot/images/sample.jpg</code>) on-demand, caches the result,
                        and serves the optimized version. Subsequent requests for the same size/quality are served from cache.
                    </div>
                </div>
            </div>
        }
    </div>
</div>

